name: Build nix profile
on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master
    paths:
      - ".github/**"
      - "**.nix"
      - "flake.lock"

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        # https://github.com/actions/runner-images?tab=readme-ov-file#available-images
        include:
          - os: ubuntu-latest
            profile: home
          - os: ubuntu-latest
            profile: nixos
            args: --build
          - os: macos-latest
            profile: home
          - os: macos-latest
            profile: darwin
            args: --build --hostname hack-local-suffix
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Insall nix
        uses: cachix/install-nix-action@v30
        with:
          # install_url: https://releases.nixos.org/nix/nix-2.18.2/install
          extra_nix_config: |
            accept-flake-config = true

      - name: Check Nix flake inputs
        uses: DeterminateSystems/flake-checker-action@v9

      - name: Github actions built-in cache
        uses: DeterminateSystems/magic-nix-cache-action@v9

      - name: Setup cachix
        uses: cachix/cachix-action@v15
        with:
          name: williamhsieh
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
          skipPush: ${{ github.ref != 'refs/heads/master' }}

      - name: Build target
        run: |
          set -o pipefail
          ./setup.py --bootstrap --profile ${{ matrix.profile }} ${{ matrix.args }}

      - name: show config
        if: always()
        run: |
          cat ./config/default.nix

      - name: Output build failure
        if: failure()
        run: |
          drv=$(grep "For full logs, run" /tmp/nix-build-err.log | grep -oE "/nix/store/.*.drv")
          nix log $drv
          echo $drv
          exit 1
