#|  _____                                        __ _         |#
#| |_   _| __ ___  _   ___  __   ___ ___  _ __  / _(_) __ _   |#
#|   | || '_ ` _ \| | | \ \/ /  / __/ _ \| '_ \| |_| |/ _` |  |#
#|   | || | | | | | |_| |>  <  | (_| (_) | | | |  _| | (_| |  |#
#|   |_||_| |_| |_|\__,_/_/\_\  \___\___/|_| |_|_| |_|\__, |  |#
#|                                                    |___/   |#

# TODO
# {{{
#	1. battery charging status (oh-my-tmux)
#	2. individual color variable
#	3. multi-level nested tmux
# 4. make available session name longer
# 5. using the latest release of tmux, and refactor the config
# }}}


# Settings
# {{{
  # window number indexing from 1
  set -g base-index 1

  # highlight window when it has new activity
  setw -g monitor-activity on
  set -g visual-activity off

  # re-number windows when one is closed
  set -g renumber-windows on

  # statusline
  set -g status-interval 1
  set -g status-position bottom
  set -g status-justify absolute-centre

  # mouse mode (tmux 2.1 and above)
  set -g mouse on

  # don't rename windows automatically
  set -g allow-rename off

  # set default shell
  # set -g default-shell $SHELL

  # vim in copy mode and emacs in status :)
  set -g mode-keys vi
  set -g status-keys emacs

  # enable terminl escape sequence
  set -g set-clipboard on

  # show true color, clipboard and proper cursor within tmux
  set -sa terminal-overrides ",*-256color:Tc"                       # true color
  set -sa terminal-overrides ',*-256color:Ms=\E]52;%p1%s;%p2%s\007' # clipboard
  set -ga terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'           # cursor

  # enlarge history limit
  set -g history-limit 100000

  # update env whenever a session is created or attached
  set -g update-environment "SSH_TTY DISPLAY"

  # no more delay for escape
  set -s escape-time 1

  set -g focus-events on

  set -g display-time 2000

  setw -g aggressive-resize on

  # passthrough terminl escape sequence
  set -g allow-passthrough on
# }}}


# Mapping
# {{{
  # split panes using | and -
  bind '\' split-window -h -c '#{pane_current_path}'
  bind '|' split-window -fh -c "#{pane_current_path}"
  bind - split-window -v -c '#{pane_current_path}'
  bind _ split-window -fv -c '#{pane_current_path}'

  # reload config file
  bind r source-file ~/.config/tmux/tmux.conf \; display-message "~/.config/tmux/tmux.conf reloaded"

  # switch panes
  bind -r C-h select-pane -L
  bind -r C-j select-pane -D
  bind -r C-k select-pane -U
  bind -r C-l select-pane -R

  # navigate between vim && tmux
  is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

  bind-key -n M-h if-shell "$is_vim" 'send-keys M-h'  'select-pane -L'
  bind-key -n M-j if-shell "$is_vim" 'send-keys M-j'  'select-pane -D'
  bind-key -n M-k if-shell "$is_vim" 'send-keys M-k'  'select-pane -U'
  bind-key -n M-l if-shell "$is_vim" 'send-keys M-l'  'select-pane -R'

  bind-key -n M-Up    if-shell "$is_vim" 'send-keys M-Up'     'select-pane -U'
  bind-key -n M-down  if-shell "$is_vim" 'send-keys M-down'   'select-pane -D'
  bind-key -n M-Left  if-shell "$is_vim" 'send-keys M-Left'   'select-pane -L'
  bind-key -n M-Right if-shell "$is_vim" 'send-keys M-Right'  'select-pane -R'

  bind-key -n C-Up    if-shell "$is_vim" 'send-keys C-Up'    'resize-pane -U 3'
  bind-key -n C-down  if-shell "$is_vim" 'send-keys C-down'  'resize-pane -D 3'
  bind-key -n C-Left  if-shell "$is_vim" 'send-keys C-Left'  'resize-pane -L 3'
  bind-key -n C-Right if-shell "$is_vim" 'send-keys C-Right' 'resize-pane -R 3'

  # synchronize-panes
  bind k setw synchronize-panes

  # vim bindings
  bind -T copy-mode-vi v send -X begin-selection
  bind -T copy-mode-vi V send -X select-line
  bind -T copy-mode-vi C-v send -X rectangle-toggle \; send -X begin-selection
  bind -T copy-mode-vi y send -X copy-selection
  bind -T copy-mode-vi q send -X clear-selection

  # copy tmux buffer to clipboard
  bind y run 'tmux saveb - | bash ~/dotfiles/config/zsh/autoload/yank && tmux display "copied!"'

  # tab like experience
  bind -n M-) switch-client -n
  bind -n M-( switch-client -p
  bind -n M-T new-session
  if-shell "tmux -V | awk '{exit !($2 >= 2.4)}'" \
  "bind -T off M-) switch-client -n; bind -T off M-( switch-client -p; bind -T off M-T new-session"

  # toggle on/off all key bindings && hide status bar
  if-shell "tmux -V | awk '{exit !($2 >= 2.4)}'" \
  "bind -T root F10 run 'tmux set prefix None && tmux set key-table off && tmux set status off && tmux refresh -S'; \
  bind -T off F10 run 'tmux set -u prefix && tmux set -u key-table && tmux set -u status && tmux refresh -S'"

  # kill-session and re-attach to next session
  if-shell "tmux -V | awk '{exit !($2 >= 2.4)}'" \
  "bind -T off M-K run-shell 'tmux display \'[closed]\'; tmux switch-client -n; tmux kill-session -t $(tmux display -p \'#S\') || tmux kill-session'"

  # swap-pane (targeted by pane number) with current pane
  bind S display-panes \; run "tmux command-prompt -p \"swap with pane:\"  \"swap-pane -s $(tmux display -p '#P') -t '%%'\""
  #bind S display-panes \; select-pane -m \; command-prompt -p "swap with pane:" "swap-pane -t '%%'" \; select-pane -M

  # join-pane (targeted by window number) from window
  bind j command-prompt -p "join pane from:" "join-pane -h -s '%%'"
  #bind j choose-window 'join-pane -h -s "%%"'

  # swap-window
  bind -r > swapw -d -t +1
  bind -r < swapw -d -t -1

  # attach current session working directory to current directory
  bind a attach-session -t . -c '#{pane_current_path}' \; display 'working directory: #{pane_current_path}'

  # sort session by name
  bind s choose-tree -s -O name

  bind h display-popup -E -w 85% -h 85% "TERM=xterm htop -d 5"
# }}}


# Theme
# {{{
  # clock
  set -g clock-mode-colour '#8aadf4'

  # split pane border color
  set -g pane-border-style "fg=#363a4f"
  set -g pane-active-border-style "fg=#8aadf4"

  # copy mode color
  set -g mode-style 'fg=#24273a,bg=#f5bde6,bold'

  # messaging
  set -g message-style 'fg=#24273a,bg=#f5a97f,bold'
  set -g message-command-style 'fg=#24273a,bg=#f5a97f,bold'

  # statusline
  set -g status-style 'bg=#24273a,fg=#24273a'
  set -g status-left '#{prefix_highlight}#[fg=default,bg=#c6a0f6] #{b:session_path} #[reverse]#[fg=#8087a2,bg=default,none]   %m/%d'
  set -g status-right '#[fg=#8087a2] %H:%M:%S  #[fg=#ee99a0]#[reverse]  #S #[bg=#f0c6c6]#[fg=default,none] #[bold] #H '
  set -g status-right-length 90
  set -g status-left-length 90

  # window theme
  set -g window-status-separator ''
  set -g window-status-bell-style 'none'
  set -g window-status-activity-style 'none'

  set -g window-status-format '#[fg=#363a4f]#[reverse]\
#{?window_bell_flag,#[bg=#ed8796]#[bold],#{?window_activity_flag,#[bg=#f0c6c6]#[bold],#[bg=#8087a2]}}#I \
#[nobold]#[bg=#8087a2]#W#F#[bg=default,none] '

  set -g window-status-current-format '#[fg=#c6a0f6]#[reverse,bold]#I \
#[none]#[fg=#cad3f5,bg=#494D64,bold] \
#W#[fg=#8087a2]#F#[fg=#494D64,bg=default] '
# }}}


# Plugins
# {{{
# tmux-logging{{{
set -g @plugin 'tmux-plugins/tmux-logging'
set -g @save-complete-history-path "$HOME/.tmux"
set -g @save-complete-history-key 'P'
# }}}

# tmux-prefix-highlight{{{
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @prefix_highlight_output_prefix '  '
set -g @prefix_highlight_output_suffix ' #[fg=#c6a0f6]#[reverse] '

set -g @prefix_highlight_prefix_prompt '#[bold]Prefix'
set -g @prefix_highlight_fg 'default'
set -g @prefix_highlight_bg 'pink'

set -g @prefix_highlight_empty_prompt 'NORMAL'
set -g @prefix_highlight_empty_has_affixes 'on'
set -g @prefix_highlight_empty_attr 'fg=default,bg=#b7bdf8,bold'

set -g @prefix_highlight_copy_prompt 'Copy'
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_mode_attr 'fg=default,bg=#EED49F,bold'

set -g @prefix_highlight_sync_prompt 'Sync'
set -g @prefix_highlight_show_sync_mode 'on'
set -g @prefix_highlight_sync_mode_attr 'fg=default,bg=#A6DA95,bold'
# }}}

# tmux-resurrect{{{
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @resurrect-default-processes 'ssh'
set -g @resurrect-capture-pane-contents 'on'
# }}}

# extrakto{{{
set -g @plugin 'laktak/extrakto'
set -g @extrakto_copy_key "ctrl-y"
set -g @extrakto_insert_key "enter"
set -g @extrakto_clip_tool "bash ~/dotfiles/config/zsh/autoload/yank"
# }}}
# }}}


# NOTE
# {{{
#	0. nice tutorial: https://thoughtbot.com/upcase/search?query=tmux
#	1. `bind -n` if -n is specified, it is not necessary to use the prefix key
#	2. `bind -r` The -r flag indicates this key may repeat, see the repeat-time option.
#	3. `if-shell -b` means run in background
#	4. prefix <space> cycle layout between even-horizontal, even-vertical, main-horizontal, main-vertical, tiled
#	5. ":a -t . -c ~" to set working directory
# }}}
